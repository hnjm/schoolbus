@page "/pages/scanner"
@using CleanArchitecture.Blazor.Application.Features.Itineraries.DTOs;
@using CleanArchitecture.Blazor.Application.Features.Itineraries.Queries.GetAll;
@inherits FluxorComponent
<div class="d-flex flex-nowrap gap-4 pa-6 justify-center" style="margin:auto; min-width: 400px; overflow-y: scroll">
    @if (_itineraries is not null)
    {
        @foreach (var item in _itineraries)
        {
            <TravelCard Itinerary="@item"></TravelCard>
        }

    }
    else
    {
        <TravelCardSkeleton></TravelCardSkeleton>
    }

    
</div>
<div class="my-4"></div>
@if (Itinerary is not null)
{
    <DeviceScanComponent Itinerary="@Itinerary"></DeviceScanComponent>
}
else
{
    <DeviceScanSkeleton></DeviceScanSkeleton>
}


@code {
    [Inject]
    private IState<UserProfileState> UserProfileState { get; set; } = null!;
    private UserProfile UserProfile => UserProfileState.Value.UserProfile;
    private IEnumerable<ItineraryDto>? _itineraries { get; set; } = null;
    private ItineraryDto? Itinerary { get; set; } = null!;
    [Inject]
    private IMediator Mediator { get; set; } = default!;
    protected override async Task OnInitializedAsync()
    {


        var result = await Mediator.Send(new GetItinerariesByPilotQuery() { UserProfile = UserProfile });

        _itineraries = result;
    }

}
