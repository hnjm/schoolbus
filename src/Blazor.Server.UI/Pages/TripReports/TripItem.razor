@using CleanArchitecture.Blazor.Application.Features.TripReports.DTOs;
@inject IStringLocalizer<TripReports> L
<MudListItem Class="d-flex flex-row align-center" Href="@($"/pages/tripview/{Trip.Id}")">
    <div class="d-flex flex-column">
    <div class="d-flex my-2">
        <h4>@Trip.DepartureDate?.ToLongDateString()</h4>
    </div>
    <div class="d-flex flex-row align-center">
        @if(Trip.Status== TripStatus.Runing)
        {
            <MudTooltip Text="@L[TripStatus.Runing.GetDescription()]">
                <MudIcon Icon="@Icons.Material.Filled.DirectionsRun" Color="Color.Primary" Size="Size.Large"></MudIcon>
            </MudTooltip>
        }
        else if (Trip.Status == TripStatus.Suspend)
        {
            <MudTooltip Text="@L[TripStatus.Suspend.GetDescription()]">
                <MudIcon Icon="@Icons.Material.Filled.BusAlert" Color="Color.Secondary" Size="Size.Large"></MudIcon>
            </MudTooltip>
        }
        else
        {
            <MudTooltip Text="@L[TripStatus.Done.GetDescription()]">
                <MudIcon Icon="@Icons.Material.Filled.TagFaces" Color="Color.Success" Size="Size.Large"></MudIcon>
            </MudTooltip>
        }

        <div class="d-flex flex-column ml-2 flex-grow-1">
            <MudText Typo="Typo.body2" Class="mud-text-primary"> @Trip.Itinerary.Name </MudText>
                <MudText Typo="Typo.body2" Class="mud-text-secondary"> @($"Time: {Trip.DepartureDate?.ToString("HH:mm")} - {Trip.ReportDate?.ToString("HH:mm")}") </MudText>
        </div>
        <div class="d-flex flex-column ml-2 align-center justify-center">
            <MudText Typo="Typo.body2"> On Board </MudText>
            <MudText Typo="Typo.body2" Class="mud-text-secondary"> @Trip.OnBoard </MudText>
        </div>
    </div>
    </div>
</MudListItem>

@code {
    [Parameter]
    [EditorRequired]
    public TripReportDto Trip { get; set; } = new();
}
